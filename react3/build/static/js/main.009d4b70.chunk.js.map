{"version":3,"sources":["serviceWorker.js","Components/footer/Footer.jsx","Components/header/Header.jsx","services/getDataService.js","Components/card/Card.jsx","services/saveNews.js","Components/dashboard/Dashboard.jsx","services/login.js","Components/login/Login.jsx","Components/register/Register.jsx","services/authenticateUser.js","Components/authenticatedRoute/AuthenticatedRoute.jsx","Components/readNow/ReadNow.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Footer","Navbar","id","bg","variant","className","Component","Header","props","logout","bind","localStorage","removeItem","this","history","push","Brand","getItem","Toggle","aria-controls","Collapse","Nav","to","NavDropdown","title","Button","onClick","withRouter","apiUrl","axios","get","headers","CardComponent","useState","show","setShow","handleClose","Card","Img","src","article","urlToImage","Body","Title","type","buttonId","readLater","Modal","onHide","closeButton","alt","description","saveNews","token","post","then","response","console","log","data","Dashboard","state","GetDataService","getDataFromApi","promiseDone","catch","Container","LinearProgress","color","Row","map","Col","key","indexOf","xs","md","lg","setState","articles","document","getElementById","style","display","loginService","username","password","error","Login","inValidCredentials","handleCredentials","login","Subtitle","Form","Group","controlId","Control","name","placeholder","value","onChange","LoginService","creditals","setItem","event","target","Register","fontSize","authenticateUser","AuthenticatedRoute","isAuth","process","isAuthenticated","ReadNow","getDataFromDatabase","App","path","exact","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.009d4b70.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport './footer.css'\r\nclass Footer extends Component{\r\n    render (){\r\n        return (\r\n            <>\r\n            \r\n            <Navbar id=\"footer\" bg=\"warning\" variant=\"dark\" className=\"w-100 d-flex justify-content-center\">\r\n                <div>StackRoute @Copyright Assignment</div>\r\n            </Navbar>\r\n            </>\r\n        );\r\n    }\r\n} \r\n\r\n\r\nexport default Footer","import React, { Component } from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.logout = this.logout.bind(this)\r\n    }\r\n     logout(){\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"username\")\r\n        this.props.history.push(\"/login\")\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"warning\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    React Assignment2 ToDo\r\n                </Navbar.Brand>\r\n                {localStorage.getItem(\"username\") !== null &&<> <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"d-flex justify-content-end\">\r\n                    <Nav>\r\n                        <Link className=\"nav-link\" to=\"/savedNews\">Read Saved News</Link>\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\r\n                        <NavDropdown title={\"Welcome \"+localStorage.getItem(\"username\")} id=\"basic-nav-dropdown\">\r\n                            <Button className=\"w-100\" variant=\"secondary\" onClick={this.logout}>Logout</Button>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse></>}\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header)","import axios from 'axios'\r\n\r\n\r\nclass GetDataService{\r\n    getDataFromApi(apiUrl){\r\n        return axios.get(apiUrl)\r\n    }\r\n\r\n    getDataFromDatabase(apiUrl,headers){\r\n        return axios.get(apiUrl,headers)\r\n    }\r\n    \r\n}\r\n\r\nexport default new GetDataService()","import React,{useState} from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport './card.css'\r\n\r\nimport { Button } from '@material-ui/core'\r\nimport { Modal,Button as BButton } from 'react-bootstrap';\r\nfunction CardComponent(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n    return (\r\n        <>\r\n        <Card id='myCard'>\r\n            <Card.Img variant=\"top\" src={props.article.urlToImage} />\r\n            <Card.Body >\r\n                <Card.Title>{props.article.title}</Card.Title><div id=\"cardButtons\">\r\n                {props.type === \"dashboard\" && <div>\r\n                <Button className=\"w-100\" id={props.buttonId} variant=\"contained\" onClick={() => {\r\n                    props.readLater(props.article, props.buttonId)\r\n                }}>Read Later</Button>\r\n                <p id={props.buttonId + \"text\"} >News Added To Read Later Database</p>\r\n                </div>}\r\n                  \r\n                <BButton  className=\"w-100 mt-1\" variant=\"success\" onClick={handleShow}>\r\n                    Read Now\r\n                </BButton>\r\n                </div>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n        \r\n         <Modal show={show} onHide={handleClose}>\r\n         <Modal.Header closeButton> \r\n           <Modal.Title>{props.article.title}</Modal.Title>\r\n         </Modal.Header>\r\n         <Modal.Body>\r\n             <img src={props.article.urlToImage} alt=\"news\"/>\r\n             {props.article.description}</Modal.Body>\r\n         <Modal.Footer>\r\n           <BButton variant=\"secondary\" onClick={handleClose}>\r\n             Close\r\n           </BButton>\r\n         </Modal.Footer>\r\n       </Modal>\r\n       </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CardComponent","import axios from 'axios'\r\n\r\nfunction saveNews(token,article) {\r\n    return axios.post('http://localhost:3001/api/v1/news/', article, { headers: { \"Authorization\": \"Bearer \" + token } }).then(response=>console.log(response.data))\r\n}\r\n\r\nexport default saveNews","import React, { Component } from 'react'\r\nimport GetDataService from '../../services/getDataService'\r\nimport CardComponent from '../card/Card'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './dashboard.css'\r\n\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport saveNews from '../../services/saveNews';\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: GetDataService.getDataFromApi(\"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=3c5db478a60b42de94cea827cc28fe05\")\r\n                .then(response => this.promiseDone(response.data)).catch(),\r\n            promiseDone: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Container className=\"mb-5\">\r\n            {!this.state.promiseDone && <LinearProgress variant=\"indeterminate\" color=\"secondary\"/>}\r\n            {this.state.promiseDone && <Row>\r\n\r\n\r\n                {this.state.data.map(article => {\r\n                    return (<Col key={this.state.data.indexOf(article)} xs={12} md={6} lg={4}>\r\n                        <CardComponent type=\"dashboard\" buttonId={this.state.data.indexOf(article)} article= {article} readLater={this.readLater}></CardComponent>\r\n                    </Col>)\r\n\r\n                })}\r\n\r\n            </Row>}\r\n\r\n        </Container>\r\n        )\r\n    }\r\n\r\n    promiseDone(data) {\r\n        this.setState({\r\n            data: data.articles,\r\n            promiseDone: true\r\n        })\r\n        console.log(this.state.data)\r\n    }\r\n\r\n    readLater(article,buttonId){\r\n       saveNews(localStorage.getItem(\"token\"),article)\r\n       document.getElementById(buttonId).style.display = \"none\"\r\n       document.getElementById(buttonId+\"text\").style.display = \"block\"\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dashboard","import axios from 'axios'\r\n\r\nfunction loginService(username,password){\r\n   return axios.post('http://localhost:3001/auth/v1',{\r\n        \"username\":username,\r\n        \"password\":password\r\n    }).then(response=>[response,username]).catch((error)=>'error')\r\n}\r\n\r\nexport default loginService","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Card, Row, Col, Form, Button } from \"react-bootstrap\";  \r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport LoginService from '../../services/login'\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            inValidCredentials  : false,\r\n            username : '',\r\n            password : ''\r\n        }\r\n        this.handleCredentials = this.handleCredentials.bind(this)\r\n        this.login = this.login.bind(this)\r\n    }\r\n    render() {\r\n        return (<Container >\r\n            <Row className=\"mt-5 justify-content-center\">\r\n                <Col lg={4}>\r\n                    <Card className=\"text-center\">\r\n                        <Card.Header>\r\n                       \r\n                        <Card.Subtitle> <h2>Login</h2></Card.Subtitle>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {this.state.inValidCredentials && <div>Invalid</div>}\r\n                        <Form>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Control className=\"text-center\" name=\"username\" type=\"userename\" placeholder=\"Enter username\" \r\n                            value={this.state.username} onChange={this.handleCredentials}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control name = \"password\" className=\"text-center\" type=\"password\" placeholder=\"Enter password\" \r\n                            value={this.state.password} onChange={this.handleCredentials}/>\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                \r\n                        <Button variant=\"dark\" onClick={this.login}>\r\n                            Login\r\n                        </Button>\r\n                            </Col>\r\n                            <Col>\r\n                            \r\n                        <Link to=\"./register\">Register</Link></Col>\r\n                        </Row>\r\n                    </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n\r\n    async login(){\r\n        let creditals = await LoginService(this.state.username,this.state.password)\r\n        \r\n        if(creditals !== 'error'){\r\n            localStorage.setItem('token',creditals[0].data.token)\r\n            localStorage.setItem('username',creditals[1])\r\n            this.props.history.push(\"/dashboard\")\r\n        }else{\r\n            this.setState({\r\n                inValidCredentials:true\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleCredentials(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [event.target.name] :  event.target.value\r\n        })\r\n    }\r\n}\r\n\r\nexport default Login","import React,{Component} from 'react'\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Card, Row, Col, Form, Button } from \"react-bootstrap\";  \r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nclass Register extends Component{\r\n    render(){\r\n        return (<Container >\r\n            <Row className=\"mt-5 justify-content-center\">\r\n                <Col lg={4}>\r\n                    <Card className=\"text-center\">\r\n                        <Card.Header>\r\n                        <Card.Title><PersonPinIcon style={{ fontSize: 60 }}/></Card.Title>\r\n                        <Card.Subtitle> <h2>Register</h2></Card.Subtitle>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                        <Form>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Control className=\"text-center\" name=\"username\" type=\"userename\" placeholder=\"Enter username\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control name = \"password\" className=\"text-center\" type=\"password\" placeholder=\"Enter password\"/>\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                \r\n                        <Button variant=\"dark\">\r\n                            Register\r\n                        </Button>\r\n                            </Col>\r\n                            <Col>\r\n                            \r\n                        <Link to=\"./login\">Login</Link></Col>\r\n                        </Row>\r\n                    </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Register","import axios from 'axios'\r\n\r\nfunction authenticateUser(token) {\r\n    return axios.post('http://localhost:3001/auth/v1/isAuthenticated ', {\r\n        \"key\": \"value\"\r\n    }, { headers: { \"Authorization\": \"Bearer \" + token } })\r\n}\r\n\r\nexport default authenticateUser","import React,{Component} from 'react'\r\nimport authenticateUser from '../../services/authenticateUser'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nclass AuthenticatedRoute extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            promiseDone : false,\r\n            isAuth: false\r\n        }\r\n    }\r\n    render(){\r\n            if(this.state.promiseDone === false){\r\n                this.process()\r\n                return null\r\n            }\r\n            else{\r\n                if(this.state.isAuth === true){\r\n                    return <Route {...this.props}/>\r\n                   }else{\r\n                    return <Redirect to=\"/login\"/>\r\n                    }\r\n            }\r\n    }\r\n\r\n    async process(){\r\n        let isAuthenticated = false\r\n        isAuthenticated = await authenticateUser(localStorage.getItem(\"token\")).then(response=>response.data.isAuthenticated).catch(error=>'error')\r\n\r\n        this.setState({\r\n            promiseDone:true,\r\n            isAuth:isAuthenticated\r\n        })       \r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","import React, { Component } from 'react'\r\nimport GetDataService from '../../services/getDataService'\r\nimport CardComponent from '../card/Card'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nclass ReadNow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: GetDataService.getDataFromDatabase(\"http://localhost:3001/api/v1/news/\",{ headers: { \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") } })\r\n                .then(response => this.promiseDone(response.data)).catch(),\r\n            promiseDone: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Container className=\"mb-5\">\r\n            {!this.state.promiseDone && <LinearProgress variant=\"indeterminate\" color=\"secondary\"/>}\r\n            {this.state.promiseDone && <Row>\r\n\r\n\r\n                {this.state.data.map(article => {\r\n                    return (<Col key={this.state.data.indexOf(article)} xs={12} md={6} lg={4}>\r\n                        <CardComponent article= {article}></CardComponent>\r\n                    </Col>)\r\n\r\n                })}\r\n\r\n            </Row>}\r\n\r\n        </Container>\r\n        )\r\n    }\r\n\r\n    promiseDone(data) {\r\n        this.setState({\r\n            data: data,\r\n            promiseDone: true\r\n        })\r\n        console.log(this.state.data)\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ReadNow","import React, { Component } from 'react'\r\nimport Footer from './Components/footer/Footer'\r\nimport Header from './Components/header/Header'\r\nimport Dashboard from './Components/dashboard/Dashboard'\r\nimport Login from './Components/login/Login'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Register from './Components/register/Register'\r\nimport AuthenticatedRoute from './Components/authenticatedRoute/AuthenticatedRoute'\r\nimport ReadNow from './Components/readNow/ReadNow'\r\nclass App extends Component {\r\n  render() {\r\n    return (<div>\r\n      \r\n      <Router>\r\n      <Header></Header>\r\n        <><Switch>\r\n          \r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <AuthenticatedRoute path=\"/dashboard\" component={Dashboard} />\r\n          <AuthenticatedRoute path=\"/savedNews\" component={ReadNow} />\r\n\r\n\r\n        </Switch></>\r\n        <Footer></Footer>\r\n      </Router>\r\n      \r\n    </div>)\r\n  }\r\n\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}